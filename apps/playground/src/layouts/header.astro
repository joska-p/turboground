---
import ThemeToggle from "@/components/widgets/themeToggle.astro";
import { routes } from "@/constants/routes";
import { cn } from "@/lib/utils";

interface Props {
  title?: string;
}

const baseUrl = import.meta.env.BASE_URL;
const { title } = Astro.props;
---

<header class="flex items-center justify-between">
  <a href={baseUrl} class="group flex items-center gap-3 bg-background outline-none">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" viewBox="0 0 2 2">
      <rect fill="#331436" x="0" y="0" width="1" height="1"></rect>
      <rect fill="#eb9961" x="1" y="0" width="1" height="1"></rect>
      <rect fill="#cb4f57" x="0" y="1" width="1" height="1"></rect>
      <rect fill="#7a1745" x="1" y="1" width="1" height="1"></rect>
    </svg>
    <h1
      class={cn(
        "whitespace-nowrap rounded-lg px-4 py-2 text-2xl font-semibold transition-colors",
        "group-hover:bg-primary group-hover:text-primary-foreground",
        "group-focus-visible:bg-primary group-focus-visible:text-primary-foreground"
      )}
    >
      {title ?? "Playground"}
    </h1>
  </a>

  <nav
    id="navbar"
    class="fixed -right-full top-0 z-20 flex h-dvh w-[max(50%,20ch)] flex-col gap-4 self-end bg-background px-4 py-1 transition-[right] md:static md:h-auto md:w-auto md:flex-row md:p-0"
  >
    <button
      id="close-sidebar-button"
      aria-label="close sidebar"
      class="flex cursor-pointer justify-end md:hidden"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="40px"
        viewBox="0 -960 960 960"
        width="40px"
        fill="currentColor"
        ><path
          d="m480-444.62-209.69 209.7q-7.23 7.23-17.5 7.42-10.27.19-17.89-7.42-7.61-7.62-7.61-17.7 0-10.07 7.61-17.69L444.62-480l-209.7-209.69q-7.23-7.23-7.42-17.5-.19-10.27 7.42-17.89 7.62-7.61 17.7-7.61 10.07 0 17.69 7.61L480-515.38l209.69-209.7q7.23-7.23 17.5-7.42 10.27-.19 17.89 7.42 7.61 7.62 7.61 17.7 0 10.07-7.61 17.69L515.38-480l209.7 209.69q7.23 7.23 7.42 17.5.19 10.27-7.42 17.89-7.62 7.61-17.7 7.61-10.07 0-17.69-7.61L480-444.62Z"
        ></path></svg
      >
    </button>
    {
      routes.map((route) => {
        const isCurrent = Astro.url.pathname === route.url;

        return (
          <a
            href={route.url}
            class={cn(
              "block rounded-lg px-4 py-2 outline-none transition-colors",
              "hover:bg-primary hover:text-primary-foreground",
              "focus-visible:bg-primary focus-visible:text-primary-foreground",
              { "text-foreground": !isCurrent },
              { "bg-primary text-primary-foreground": isCurrent }
            )}
            aria-current={isCurrent ? "page" : false}
          >
            {route.text}
          </a>
        );
      })
    }
    <ThemeToggle />
  </nav>

  <button
    id="open-sidebar-button"
    aria-label="open sidebar"
    aria-expanded="false"
    aria-controls="navbar"
    class="mr-4 cursor-pointer md:hidden"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="40px"
      viewBox="0 -960 960 960"
      width="40px"
      fill="currentColor"
    >
      <path
        d="M165.13-254.62q-10.68 0-17.9-7.26-7.23-7.26-7.23-18t7.23-17.86q7.22-7.13 17.9-7.13h629.74q10.68 0 17.9 7.26 7.23 7.26 7.23 18t-7.23 17.87q-7.22 7.12-17.9 7.12H165.13Zm0-200.25q-10.68 0-17.9-7.27-7.23-7.26-7.23-17.99 0-10.74 7.23-17.87 7.22-7.13 17.9-7.13h629.74q10.68 0 17.9 7.27 7.23 7.26 7.23 17.99 0 10.74-7.23 17.87-7.22 7.13-17.9 7.13H165.13Zm0-200.26q-10.68 0-17.9-7.26-7.23-7.26-7.23-18t7.23-17.87q7.22-7.12 17.9-7.12h629.74q10.68 0 17.9 7.26 7.23 7.26 7.23 18t-7.23 17.86q-7.22 7.13-17.9 7.13H165.13Z"
      ></path>
    </svg>
  </button>

  <div
    id="overlay"
    aria-hidden="true"
    class="fixed inset-0 z-10 hidden bg-black/50 transition-opacity"
  >
  </div>
</header>

<script is:inline>
  const navbar = document.getElementById("navbar");
  const openButton = document.getElementById("open-sidebar-button");
  const closeButton = document.getElementById("close-sidebar-button");
  const overlay = document.getElementById("overlay");

  const media = window.matchMedia("(width < 768px)");

  media.addEventListener("change", (e) => updateNavbar(e));
  openButton.addEventListener("click", openSidebar);
  closeButton.addEventListener("click", closeSidebar);
  overlay.addEventListener("click", closeSidebar);

  function updateNavbar(e) {
    const isMobile = e.matches;
    if (isMobile) {
      navbar.setAttribute("inert", "");
    } else {
      // desktop device
      navbar.removeAttribute("inert");
    }
  }

  function openSidebar() {
    navbar.classList.remove("-right-full");
    navbar.classList.add("right-0");
    openButton.setAttribute("aria-expanded", "true");
    navbar.removeAttribute("inert");
    overlay.classList.remove("hidden");
  }

  function closeSidebar() {
    navbar.classList.remove("right-0");
    navbar.classList.add("-right-full");
    openButton.setAttribute("aria-expanded", "false");
    navbar.setAttribute("inert", "");
    overlay.classList.add("hidden");
  }

  updateNavbar(media);
</script>
